{"version":3,"sources":["App/AuthSlicer.js","Components/NavBar.js","Pages/LoginPage.js","Pages/RegisterPage.js","Components/CompanyTable.js","Components/InvoiceTable.js","Pages/ProfilePage.js","Components/CompanyMaker.js","Pages/CompanyManager/CreateCompany.js","StaticImages/spill.png","Pages/NotFoundPage.js","Pages/CompanyManager/ViewCompany.js","Components/InvoiceMaker.js","Pages/InvoiceManager/CreateInvoice.js","Components/Invoice.js","Pages/InvoiceManager/ViewInvoice.js","Components/PrivateRoute.js","Pages/HomePage.js","App.js","reportWebVitals.js","App/store.js","index.js"],"names":["AuthSlice","createSlice","name","initialState","isLoggedIn","userEmail","reducers","userAuthentication","state","action","payload","email","actions","NavBar","dispatch","useDispatch","useSelector","logoLink","e","a","preventDefault","axios","post","withCredentials","then","res","data","className","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","role","aria-haspopup","aria-labelledby","Button","onClick","handleLogout","to","LoginPage","history","useHistory","useState","setEmail","password","setPassword","errMessages","setErrMessages","push","catch","err","response","errMessage","Form","onSubmit","Row","onChange","target","value","split","map","i","variant","RegisterPage","confirmPassword","setConfirmPassword","required","CompanyTable","allCompanies","setAllCompanies","companiesDisplayed","setCompaniesDisplayed","inputCompanyText","setInputCompanyText","useEffect","get","getCompanies","filter","c","companyName","toLowerCase","includes","columns","dataField","text","classes","formatter","row","rowContent","style","placeholder","headerClasses","rowClasses","keyField","pagination","paginationFactory","page","sizePerPage","totalSize","length","pageStartIndex","paginationSize","hideSizePerPage","sizePerPageList","withFirstAndLast","alwaysShowAllBtns","firstPageText","prePageText","nextPageText","lastPageText","nextPageTitle","prePageTitle","hidePageListOnlyOnePage","InvoiceTable","allInvoices","setAllInvoices","invoicesDisplayed","setDisplayedInvoices","invoiceInputText","setInvoiceInputText","invoiceType","setInvoiceType","getInvoices","textFilterInvoices","customerName","isFinalized","borderBottom","ProfilePage","CompanyMaker","props","setCompanyName","companyEmail","setCompanyEmail","companyPhone","setCompanyPhone","companyAddressLine1","setCompanyAdd1","companyAddressLine2","setCompanyAdd2","companyCity","setCompanyCity","companyState","setCompanyState","companyZip","setCompanyZip","logo","setLogo","undefined","defaultCompanyVals","addressLine1","addressLine2","city","zipCode","emailAddress","phoneNumber","companyLogo","getCompany","isLogoAvailable","document","getElementById","src","btn_class","handleDelete","alt","cmd","body","handleSave","accept","newLogoImg","files","reader","FileReader","readAsDataURL","onload","imgBytes","JSON","stringify","result","substring","handleImgUpload","htmlFor","CreateCompany","companyBody","status","NotFoundPage","img","ViewCompany","params","useParams","isLoaded","setIsLoaded","setStatus","targetCompany","setTargetCompany","url","put","delete","finally","InvoiceMaker","setCustomerName","customerAddressLine1","setCustomerAdd1","customerAddressLine2","setCustomerAdd2","customerCity","setCustomerCity","customerState","setCustomerState","customerZip","setCustomerZip","productsList","setProductsList","taxRate","setTaxRate","taxAmount","setTaxAmount","subtotal","setSubtotal","grandTotal","setGrandTotal","notes","setNotes","setIsFinalized","defaultInvoiceVals","customerAddLine1","customerAddLine2","customerZipCode","productOrServices","newSubTotal","forEach","p","unitPrice","quantity","newGrandTotal","Math","ceil","calcultateGrandTotal","choice","find","handleSelect","hidden","defaultValue","newEntry","addToProductsList","init","skin","content_css","menubar","height","plugins","toolbar","min","scope","productName","dangerouslySetInnerHTML","__html","description","pos","splice","removeFromProductList","toFixed","onEditorChange","content","form","CreateInvoice","invoiceBody","Invoice","React","forwardRef","ref","data-select2-id","date","taxes","total","ViewInvoice","componentRef","useRef","handlePrint","useReactToPrint","current","invoiceData","setInvoiceData","loadStatus","setLoadStatus","getInvoiceData","PrivateRoute","exact","path","render","Comp","HomePage","App","isLoading","setIsLoading","getUserStatus","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","store","configureStore","reducer","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.eb1da8bd.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst AuthSlice = createSlice({\r\n    name: \"AuthSlice\",\r\n    initialState: {\r\n        isLoggedIn: false,\r\n        userEmail: \"\"\r\n    },\r\n    reducers: {\r\n        userAuthentication: (state, action) =>\r\n        {\r\n            return{\r\n                ...state, ...{\r\n                    userEmail: action.payload.email,\r\n                    isLoggedIn: action.payload.email !== \"\"\r\n                }\r\n            }\r\n        }\r\n    }\r\n})\r\n\r\nexport const {userAuthentication} = AuthSlice.actions;\r\nexport default AuthSlice.reducer;","import React from \"react\";\r\nimport {Link} from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport {useDispatch} from 'react-redux'\r\nimport { userAuthentication } from '../App/AuthSlicer';\r\nimport { Button } from \"react-bootstrap\";\r\nimport { useSelector } from 'react-redux';\r\n\r\nfunction NavBar()\r\n{\r\n    const dispatch = useDispatch();\r\n    const {isLoggedIn} = useSelector(state => state.AuthSlice);\r\n    const {userEmail} = useSelector(state => state.AuthSlice);\r\n\r\n    const logoLink = isLoggedIn ? \"/InvoiceAPI_Client/Profile\" : \"/InvoiceAPI_Client/\";\r\n\r\n    async function handleLogout(e)\r\n    {\r\n        e.preventDefault();\r\n\r\n        const url = \"https://localhost:44383/api/Account/Logout\"\r\n        await axios.post(url,{},{withCredentials: true})\r\n            .then((res) => {\r\n                dispatch(userAuthentication(res.data))\r\n            })\r\n    }\r\n\r\n    return(\r\n        \r\n        <div>\r\n            <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n                <a className=\"navbar-brand\" href={logoLink}>Tavera Invoice</a>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarText\" aria-controls=\"navbarText\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarText\">\r\n                    <ul className=\"navbar-nav mr-auto\">\r\n                    <li className=\"nav-item active\">\r\n                        <a className=\"nav-link\" href={logoLink}>Home<span className=\"sr-only\">(current)</span></a>\r\n                    </li>\r\n\r\n                    {\r\n                        isLoggedIn\r\n                        ? <li className=\"nav-item dropdown\">\r\n                            <a className=\"nav-link dropdown-toggle\" href=\"/\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                            Manager\r\n                            </a>\r\n                            <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n                                <a className=\"nav-link\" href=\"/InvoiceAPI_Client/InvoiceManager/NewInvoice\">New Invoice</a>\r\n                                <a className=\"nav-link\" href=\"/InvoiceAPI_Client/CompanyManager/NewCompany\">New Company</a>\r\n                            </div>\r\n                          </li>\r\n                        : <div></div>\r\n                    }\r\n\r\n                    \r\n                    </ul>\r\n                    <span className=\"navbar-text\">\r\n                        <ul className=\"navbar-nav mr-auto\">\r\n                            {\r\n                                !isLoggedIn\r\n                                ? <div>\r\n                                      <Link to=\"/InvoiceAPI_Client/Login\" className=\"btn btn-light\">Login</Link>\r\n                                      <Link to=\"/InvoiceAPI_Client/Register\" className=\"btn btn-light\">Register</Link>\r\n                                  </div>\r\n                                : <div>\r\n                                      <a className=\"btn btn-light\" href=\"/InvoiceAPI_Client/Profile\">{userEmail}</a>\r\n                                      <Button type=\"button\" className=\"btn btn-light\" onClick={(e) => handleLogout(e)}>Logout</Button>\r\n                                  </div> \r\n                            }\r\n                        </ul>\r\n                    </span>\r\n                </div>\r\n            </nav>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NavBar;","import React, {useState} from 'react';\r\nimport axios from 'axios';\r\nimport { Button, Form } from 'react-bootstrap';\r\nimport {useDispatch} from 'react-redux'\r\nimport { userAuthentication } from '../App/AuthSlicer';\r\nimport { useHistory } from 'react-router-dom'\r\nimport \"./LoginRegister.css\"\r\n\r\nfunction LoginPage()\r\n{\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    \r\n    const [email, setEmail] = useState(\"\"); \r\n    const [password, setPassword] = useState(\"\");\r\n    const [errMessages, setErrMessages] = useState(\"\");\r\n\r\n    async function submitHandler(e)\r\n    {   \r\n        e.preventDefault();\r\n\r\n        const url = \"https://localhost:44383/api/Account/Login\";\r\n        await axios.post(url, {\"email\": email, \"password\": password}, {withCredentials: true})\r\n            .then((res) => {\r\n                dispatch(userAuthentication(res.data))\r\n                history.push(\"/InvoiceAPI_Client/Profile\")\r\n            })\r\n            .catch((err) => {\r\n                setErrMessages(err.response.data.errMessage);\r\n            })\r\n    }\r\n\r\n    return(\r\n        <div className=\"col-lg-12 registerPage\">\r\n\r\n            <div className=\"col-lg-3 col-sm-6 form-box align-middle\">\r\n\r\n                <h1 className=\"credential-title\">Login</h1>\r\n\r\n                <Form className=\"justify-content-center\" onSubmit={submitHandler}>\r\n\r\n                    <div className=\"credential-section\">\r\n                        <Form.Row className=\"justify-content-center\">\r\n                            <input className=\"credential-input\" type=\"email\" onChange={(e) => setEmail(e.target.value)}/>\r\n                        </Form.Row>\r\n                    \r\n                        <Form.Row className=\"\">\r\n                            <label className=\"credential-label\">Email</label>\r\n                        </Form.Row>\r\n                    </div>\r\n\r\n                    <div className=\"credential-section\">\r\n                        <Form.Row className=\"justify-content-center\">                    \r\n                            <input className=\"credential-input\" type=\"password\" onChange={(e) => setPassword(e.target.value)}/>\r\n                        </Form.Row>\r\n\r\n                        <Form.Row className=\"\">                    \r\n                            <label className=\"credential-label\">Password</label>\r\n                        </Form.Row>\r\n                    </div>\r\n\r\n                    {\r\n                        errMessages !== \"\"\r\n                        ?   <div className=\"col-12 err-messages\">\r\n                                {\r\n                                    errMessages.split(\".\").map((e, i) => { \r\n                                        return (<p key={i} className=\"text-danger\">{e}</p>)\r\n                                    })\r\n                                }\r\n                            </div>\r\n                        :   <div></div>\r\n                    }\r\n\r\n                    <div className=\"signin-submit-btn\">\r\n                        <Form.Row className=\"justify-content-center\">                    \r\n                            <Button className=\"btn btn-lg btn-block\" variant=\"light\" type=\"submit\">Login</Button>\r\n                        </Form.Row>\r\n                    </div>\r\n                </Form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginPage;","import React, {useState} from 'react';\r\nimport { Button, Form } from 'react-bootstrap';\r\nimport axios from 'axios';\r\nimport {useDispatch} from 'react-redux'\r\nimport { userAuthentication } from '../App/AuthSlicer';\r\nimport {useHistory} from 'react-router-dom';\r\nimport \"./LoginRegister.css\"\r\n\r\nfunction RegisterPage()\r\n{\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    \r\n    const [email, setEmail] = useState(\"\"); \r\n    const [password, setPassword] = useState(\"\");\r\n    const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n    const [errMessages, setErrMessages] = useState(\"\");\r\n\r\n    async function submitHandler(e)\r\n    {\r\n        e.preventDefault();\r\n\r\n        const url = \"https://localhost:44383/api/Account/Register\";\r\n        await axios.post(url, {\"email\": email, \"password\": password, \"confirmPassword\": confirmPassword}, {withCredentials: true})\r\n            .then((res) => {\r\n                dispatch(userAuthentication(res.data))\r\n                history.push(\"/InvoiceAPI_Client/Profile\")\r\n            })\r\n            .catch((err) => {\r\n                setErrMessages(err.response.data.errMessage);\r\n            })\r\n    }\r\n\r\n    return(\r\n        <div className=\"col-lg-12 registerPage\">\r\n\r\n            <div className=\"col-lg-3 col-sm-6 form-box align-middle\">\r\n\r\n                <h1 className=\"credential-title\">Register</h1>\r\n\r\n                <Form className=\"justify-content-center\" onSubmit={submitHandler}>\r\n\r\n                    <div className=\"credential-section\">\r\n                        <Form.Row className=\"justify-content-center\">\r\n                            <input required={true} className=\"credential-input\" type=\"email\" onChange={(e) => setEmail(e.target.value)}/>\r\n                        </Form.Row>\r\n                    \r\n                        <Form.Row className=\"\">\r\n                            <label className=\"credential-label\">Email</label>\r\n                        </Form.Row>\r\n                    </div>\r\n\r\n                    <div className=\"credential-section\">\r\n                        <Form.Row className=\"justify-content-center\">                    \r\n                            <input required={true} className=\"credential-input\" type=\"password\" onChange={(e) => setPassword(e.target.value)}/>\r\n                        </Form.Row>\r\n\r\n                        <Form.Row className=\"\">                    \r\n                            <label className=\"credential-label\">Password</label>\r\n                        </Form.Row>\r\n                    </div>\r\n\r\n                    <div className=\"credential-section\">\r\n                        <Form.Row className=\"justify-content-center\">                    \r\n                            <input required={true} className=\"credential-input\" type=\"password\" onChange={(e) => setConfirmPassword(e.target.value)}/>\r\n                        </Form.Row>\r\n                        \r\n                        <Form.Row className=\"\">                    \r\n                            <label className=\"credential-label\">Confirm Password</label>\r\n                        </Form.Row>\r\n                    </div>\r\n\r\n                    {\r\n                        errMessages !== \"\"\r\n                        ?   <div className=\"col-12 err-messages\">\r\n                                {\r\n                                    errMessages.split(\".\").map((e, i) => { \r\n                                        return (<p key={i} className=\"text-danger\">{e}</p>)\r\n                                    })\r\n                                }\r\n                            </div>\r\n                        :   <div></div>\r\n                    }\r\n\r\n                    <div className=\"signin-submit-btn\">\r\n                        <Form.Row className=\"justify-content-center\">                    \r\n                            <Button className=\"btn btn-lg btn-block\" variant=\"light\" type=\"submit\">Register</Button>\r\n                        </Form.Row>\r\n                    </div>\r\n                </Form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RegisterPage;","import React, {useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\n\r\nfunction CompanyTable()\r\n{\r\n    const [allCompanies, setAllCompanies] = useState([]);\r\n    const [companiesDisplayed, setCompaniesDisplayed] = useState([]);\r\n    const [inputCompanyText, setInputCompanyText] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        async function getCompanies()\r\n        {\r\n            const url = \"https://localhost:44383/api/Company/GetCompanies\";\r\n            await axios.get(url, {withCredentials: true})\r\n            .then((res) => {\r\n                setAllCompanies(res.data);\r\n            })\r\n        }\r\n        \r\n        getCompanies();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const res = inputCompanyText !== \"\" \r\n            ? allCompanies.filter((c) => c.companyName.toLowerCase().includes(inputCompanyText.toLowerCase()))\r\n            : allCompanies;\r\n\r\n            setCompaniesDisplayed(res)\r\n    }, [inputCompanyText, allCompanies])\r\n\r\n    const columns = [\r\n        {\r\n            dataField: 'companyName',\r\n            text: 'Company Name',\r\n            classes: \"align-middle\",\r\n            formatter: (row, rowContent) => rowContent.companyName\r\n        }, \r\n        {\r\n            dataField: 'actions',\r\n            text: 'Actions',\r\n            classes: \"align-middle\",\r\n            formatter: (row, rowContent) => {\r\n                return (\r\n                    <div>\r\n                        <a href={\"/InvoiceAPI_Client/CompanyManager/ViewCompany/\" + rowContent.id} className=\"btn btn-default\">View</a>\r\n                    </div>\r\n                )\r\n            }\r\n        },\r\n    ];\r\n\r\n    return(\r\n        <div>\r\n            <div className=\"col-12\" style={{\"margin\": \"10px 0\", \"padding\": \"0\"}}>\r\n                <input onChange={(e) => setInputCompanyText(e.target.value)} style={{\"border\": \"solid black 1px\", \"width\": \"100%\"}} placeholder=\"Search\"/>\r\n            </div>\r\n\r\n            <BootstrapTable headerClasses=\"thead-dark\" rowClasses=\"align-items-center\" keyField='id' classes=\"table table-borderless table-light table-striped\" data={companiesDisplayed} columns={columns} pagination={paginationFactory({\r\n                page: 0, // Specify the current page. It's necessary when remote is enabled\r\n                sizePerPage: 10, // Specify the size per page. It's necessary when remote is enabled\r\n                totalSize: companiesDisplayed.length, // Total data size. It's necessary when remote is enabled\r\n                pageStartIndex: 1, // first page will be 0, default is 1\r\n                paginationSize: 3,  // the pagination bar size, default is 5\r\n                hideSizePerPage: true,\r\n                sizePerPageList: [ {\r\n                    text: '10', value: 10\r\n                }, {\r\n                    text: '25', value: 25\r\n                }, {\r\n                    text: 'All', value: companiesDisplayed.length\r\n                } ], // A numeric array is also available: [5, 10]. the purpose of above example is custom the text\r\n                withFirstAndLast: false, // hide the going to first and last page button\r\n                alwaysShowAllBtns: true, // always show the next and previous page button\r\n                firstPageText: 'First', // the text of first page button\r\n                prePageText: 'Prev', // the text of previous page button\r\n                nextPageText: 'Next', // the text of next page button\r\n                lastPageText: 'Last', // the text of last page button\r\n                nextPageTitle: 'Go to next', // the title of next page button\r\n                prePageTitle: 'Go to previous', // the title of previous page button\r\n                hidePageListOnlyOnePage: true, // hide pagination bar when only one page, default is false\r\n            }) } />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CompanyTable;","import React, {useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\n\r\n\r\nfunction InvoiceTable()\r\n{\r\n    const [allInvoices, setAllInvoices] = useState([]);\r\n    const [invoicesDisplayed, setDisplayedInvoices] = useState([]);\r\n    const [invoiceInputText, setInvoiceInputText] = useState(\"\");\r\n    const [invoiceType, setInvoiceType] = useState(\"ALL\");\r\n\r\n    useEffect(() => {\r\n        async function getInvoices()\r\n        {\r\n            const url = \"https://localhost:44383/api/Invoice/GetInvoices\";\r\n            await axios.get(url, {withCredentials: true})\r\n            .then((res) => {\r\n                setAllInvoices(res.data);\r\n            })\r\n        }\r\n        \r\n        getInvoices();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        setDisplayedInvoices(allInvoices);\r\n    }, [allInvoices])\r\n\r\n    useEffect(() => {\r\n        const textFilterInvoices = invoiceInputText !== \"\" \r\n            ? allInvoices\r\n                .filter((c) => \r\n                    c.id.includes(invoiceInputText)\r\n                    || c.companyName.toLowerCase().includes(invoiceInputText.toLowerCase())\r\n                    || c.customerName.toLowerCase().includes(invoiceInputText.toLowerCase()))\r\n            : allInvoices;\r\n\r\n        let res = [];\r\n        \r\n        switch (invoiceType) {\r\n            case \"COMPLETE\":\r\n                res = textFilterInvoices.filter((i) => i.isFinalized);\r\n                break;\r\n            case \"DRAFTS\":\r\n                res = textFilterInvoices.filter((i) => !i.isFinalized);\r\n                break;\r\n            default:\r\n                res = textFilterInvoices;\r\n                break;\r\n        }\r\n        \r\n        setDisplayedInvoices(res)\r\n\r\n    }, [invoiceInputText, allInvoices, invoiceType])\r\n\r\n    useEffect(() => {\r\n\r\n    },[invoiceType])\r\n\r\n    const columns = [\r\n        {\r\n            dataField: 'companyName',\r\n            text: 'Company Name',\r\n            style:{borderBottom: \"1px black solid\"},\r\n            classes: (row, rowContent) => {\r\n                return (rowContent.isFinalized ? \"table-success text-dark align-middle\" : \"table-warning text-dark align-middle\")\r\n            },\r\n            formatter: (row, rowContent) => rowContent.companyName\r\n        },\r\n        {\r\n            dataField: 'customerName',\r\n            text: 'Customer Name',\r\n            style:{borderBottom: \"1px black solid\"},\r\n            classes: (row, rowContent) => {\r\n                return (rowContent.isFinalized ? \"table-success text-dark align-middle\" : \"table-warning text-dark align-middle\")\r\n            },\r\n            formatter: (row, rowContent) => rowContent.customerName\r\n        },\r\n        {\r\n            dataField: 'actions',\r\n            text: 'Actions',\r\n            style:{borderBottom: \"1px black solid\"},\r\n            classes: (row, rowContent) => {\r\n                return (rowContent.isFinalized ? \"table-success text-dark align-middle\" : \"table-warning text-dark align-middle\")\r\n            },\r\n\r\n            formatter: (row, rowContent) => {\r\n                return (\r\n                    <div>\r\n                        <a href={\"/InvoiceAPI_Client/InvoiceManager/ViewInvoice/\" + rowContent.id} className=\"btn btn-default\">View</a>\r\n                    </div>\r\n                )\r\n            }\r\n        },\r\n    ];\r\n\r\n    return(\r\n        <div>\r\n            <div className=\"col-12\" style={{\"margin\": \"10px 0\", \"padding\": \"0\"}}>\r\n                <div className=\"row\">\r\n                    <div className=\"col-8\">\r\n                        <input className=\"col-12\" onChange={(e) => setInvoiceInputText(e.target.value)} style={{\"border\": \"solid black 1px\", \"width\": \"100%\"}} placeholder=\"Search\"/>\r\n                    </div>\r\n                    <div className=\"col-4\">\r\n                        <select className=\"col-12\" onChange={(e) => setInvoiceType(e.target.value)} name=\"invoiceChoice\" id=\"invoice-choices\">\r\n                            <option value=\"ALL\">All</option>\r\n                            <option value=\"COMPLETE\">Complete Only</option>\r\n                            <option value=\"DRAFTS\">Drafts Only</option>\r\n                        </select>        \r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <BootstrapTable headerClasses=\"thead-dark\" rowClasses=\"align-items-center\" keyField='id' classes=\"table table-light table-borderless table-striped table-responsive-xs\" data={invoicesDisplayed} columns={columns} pagination={paginationFactory({\r\n                page: 0, // Specify the current page. It's necessary when remote is enabled\r\n                sizePerPage: 10, // Specify the size per page. It's necessary when remote is enabled\r\n                totalSize: invoicesDisplayed.length, // Total data size. It's necessary when remote is enabled\r\n                pageStartIndex: 1, // first page will be 0, default is 1\r\n                paginationSize: 3,  // the pagination bar size, default is 5\r\n                hideSizePerPage: true,\r\n                sizePerPageList: [ {\r\n                    text: '10', value: 10\r\n                }, {\r\n                    text: '25', value: 25\r\n                }, {\r\n                    text: 'All', value: invoicesDisplayed.length\r\n                } ], // A numeric array is also available: [5, 10]. the purpose of above example is custom the text\r\n                withFirstAndLast: false, // hide the going to first and last page button\r\n                alwaysShowAllBtns: true, // always show the next and previous page button\r\n                firstPageText: 'First', // the text of first page button\r\n                prePageText: 'Prev', // the text of previous page button\r\n                nextPageText: 'Next', // the text of next page button\r\n                lastPageText: 'Last', // the text of last page button\r\n                nextPageTitle: 'Go to next', // the title of next page button\r\n                prePageTitle: 'Go to previous', // the title of previous page button\r\n                hidePageListOnlyOnePage: true, // hide pagination bar when only one page, default is false\r\n            }) } />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InvoiceTable;","import React from 'react';\r\nimport CompanyTable from '../Components/CompanyTable.js'\r\nimport InvoiceTable from '../Components/InvoiceTable.js'\r\nimport './Styles/Profile.css';\r\n\r\nfunction ProfilePage()\r\n{\r\n    return(\r\n        <div className=\"col-lg-8 center-block dark-bg dark-box-shadow\" >\r\n            <div className=\"base-page row\">\r\n                <div className=\"col-xl-4 col-lg-12  col-md-12 center-block dist-block\">\r\n                    <h1 className=\"table-name\">Company Manager</h1>\r\n                    <a href=\"/InvoiceAPI_Client/CompanyManager/NewCompany\" className=\"btn btn-primary create-new-btn\">Create New</a>\r\n                    <CompanyTable />\r\n                </div>\r\n\r\n                <div className=\"col-xl-8 col-lg-12 col-md-12 center-block dist-block\">\r\n                    <h1 className=\"table-name\">Invoice Manager</h1>\r\n                    <a href=\"/InvoiceAPI_Client/InvoiceManager/NewInvoice\" className=\"btn btn-primary create-new-btn\">Create New</a>\r\n                    <InvoiceTable />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfilePage;","import React, {useState, useEffect} from 'react';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport \"./Styles/CompanyForms.css\";\r\n\r\nfunction CompanyMaker(props)\r\n{\r\n    const [companyName, setCompanyName] = useState(\"\");\r\n    const [companyEmail, setCompanyEmail] = useState(\"\");\r\n    const [companyPhone, setCompanyPhone] = useState(\"\");\r\n    const [companyAddressLine1, setCompanyAdd1] = useState(\"\");\r\n    const [companyAddressLine2, setCompanyAdd2] = useState(\"\");\r\n    const [companyCity, setCompanyCity] = useState(\"\");\r\n    const [companyState, setCompanyState] = useState(\"\");\r\n    const [companyZip, setCompanyZip] = useState(\"\");\r\n    const [logo, setLogo] = useState(\"\");\r\n\r\n    useEffect(() => \r\n    {\r\n        async function getCompany()\r\n        {\r\n            if(props.defaultCompanyVals !== undefined)\r\n            {\r\n                setCompanyName(props.defaultCompanyVals.companyName);\r\n                setCompanyAdd1(props.defaultCompanyVals.addressLine1);\r\n                setCompanyAdd2(props.defaultCompanyVals.addressLine2);\r\n                setCompanyCity(props.defaultCompanyVals.city);\r\n                setCompanyState(props.defaultCompanyVals.state);\r\n                setCompanyZip(props.defaultCompanyVals.zipCode);\r\n                setCompanyEmail(props.defaultCompanyVals.emailAddress);\r\n                setCompanyPhone(props.defaultCompanyVals.phoneNumber);\r\n                setLogo(props.defaultCompanyVals.companyLogo);\r\n            }\r\n        }\r\n        \r\n        getCompany();\r\n    },[props.defaultCompanyVals]);\r\n\r\n    useEffect(() => {\r\n        const isLogoAvailable = logo !== \"\" && logo !== null;\r\n\r\n        document.getElementById(\"logo-img\").src = logo;\r\n        document.getElementById(\"logo-img\").className = isLogoAvailable ? \"\" : \"d-none\";\r\n        document.getElementById(\"clear-logo-cont\").className = isLogoAvailable ? \"\" : \"d-none\";\r\n        \r\n    }, [logo])\r\n\r\n    function handleSave(e)\r\n    {\r\n        e.preventDefault();\r\n        const body = {\r\n            \"companyName\": companyName,\r\n            \"addressLine1\": companyAddressLine1,\r\n            \"addressLine2\": companyAddressLine2,\r\n            \"city\": companyCity,\r\n            \"state\": companyState,\r\n            \"zipCode\": companyZip,\r\n            \"emailAddress\": companyEmail,\r\n            \"phoneNumber\": companyPhone,\r\n            \"companyLogo\": logo\r\n        };\r\n\r\n        props.handleSave(e, body);\r\n    }\r\n\r\n    function handleImgUpload(e)\r\n    {\r\n        const newLogoImg = e.target.files[0];\r\n\r\n        if(newLogoImg !== undefined)\r\n        {\r\n            const reader = new FileReader();\r\n            reader.readAsDataURL(newLogoImg);\r\n            \r\n            reader.onload = function () {\r\n                const imgBytes = JSON.stringify(reader.result)\r\n                setLogo(imgBytes.substring(1, imgBytes.length-1));\r\n            }\r\n        }\r\n    }\r\n\r\n    const btn_class = props.handleDelete !== undefined\r\n        ? \"col-6\"\r\n        : \"col-12\";\r\n    \r\n    return(\r\n        <div className=\"col-xl-4 col-md-8 col-sm-12 creation-page\">\r\n            <div className=\"col-lg-12 logo-cont\">\r\n                <img src={logo} alt=\"logo\" id=\"logo-img\" className=\"col-12\" />\r\n            </div>\r\n            <div id=\"clear-logo-cont\">\r\n                <Button type=\"button\" className=\"btn btn-danger\" onClick={(e) => setLogo(\"\")}>Clear Logo</Button>\r\n            </div>\r\n            <h1 className=\"form-name\">{props.cmd} Company</h1>\r\n            <hr />\r\n            <Form onSubmit={(e) => handleSave(e)}>\r\n                <div className=\"form-group row\">\r\n                    <div className=\"col-12\">\r\n                        <label>Logo</label>\r\n                        <input alt=\"logo-input\" className=\"btn btn-default\" type=\"file\" accept=\"image/png\" onChange={(e) => handleImgUpload(e)} />\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"inputName\">Company Name</label>\r\n                    <input value={companyName || \"\"} required={true} onChange={(e) => setCompanyName(e.target.value)} type=\"text\" className=\"form-control\" id=\"inputName\" />\r\n                </div>\r\n                <div className=\"form-row\">\r\n                    <div className=\"form-group col-md-6\">\r\n                        <label htmlFor=\"inputEmail4\">Email</label>\r\n                        <input value={companyEmail || \"\"} onChange={(e) => setCompanyEmail(e.target.value)} type=\"email\" className=\"form-control\" id=\"inputEmail4\" />\r\n                    </div>\r\n                    <div className=\"form-group col-md-6\">\r\n                        <label htmlFor=\"inputPassword4\">Telephone</label>\r\n                        <input value={companyPhone || \"\"} onChange={(e) => setCompanyPhone(e.target.value)} type=\"tel\" className=\"form-control\" id=\"inputPassword4\" />\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"inputAddress\">Address Line 1</label>\r\n                    <input value={companyAddressLine1 || \"\"} onChange={(e) => setCompanyAdd1(e.target.value)} type=\"text\" className=\"form-control\" id=\"inputAddress\" placeholder=\"1234 Main St\" />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"inputAddress2\">Address Line 2</label>\r\n                    <input value={companyAddressLine2 || \"\"} onChange={(e) => setCompanyAdd2(e.target.value)} type=\"text\" className=\"form-control\" id=\"inputAddress2\" placeholder=\"Apartment, studio, or floor\" />\r\n                </div>\r\n                <div className=\"form-row\">\r\n                    <div className=\"form-group col-md-6\">\r\n                        <label htmlFor=\"inputCity\">City</label>\r\n                        <input value={companyCity || \"\"} onChange={(e) => setCompanyCity(e.target.value)} type=\"text\" className=\"form-control\" id=\"inputCity\" />\r\n                    </div>\r\n                    <div className=\"form-group col-md-4\">\r\n                        <label htmlFor=\"inputState\">State</label>\r\n                        <input value={companyState || \"\"} onChange={(e) => setCompanyState(e.target.value)} type=\"text\" className=\"form-control\" id=\"inputState\" />\r\n                    </div>\r\n                    <div className=\"form-group col-md-2\">\r\n                        <label htmlFor=\"inputZip\">Zip</label>\r\n                        <input value={companyZip || \"\"} onChange={(e) => setCompanyZip(e.target.value)} type=\"text\" className=\"form-control\" id=\"inputZip\" />\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-lg-12\">\r\n                    <div className=\"row\">\r\n                        <div className={btn_class}>\r\n                            <Button type=\"submit\" className=\"btn btn-success col-12\">Save</Button>\r\n                        </div>\r\n\r\n                        {\r\n                            props.handleDelete !== undefined \r\n                            ?   <div className={btn_class}>\r\n                                    <Button onClick={(e) => props.handleDelete(e)} type=\"button\" className=\"btn btn-danger col-12\">Delete</Button>\r\n                                </div>\r\n                            : <div></div>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CompanyMaker;","import React from 'react';\r\nimport axios from 'axios';\r\nimport CompanyMaker from '../../Components/CompanyMaker';\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nfunction CreateCompany()\r\n{\r\n    const history = useHistory();\r\n    \r\n    async function createNewCompany(e, companyBody)\r\n    {\r\n        e.preventDefault();\r\n        const url = \"https://localhost:44383/api/Company/NewCompany\";\r\n        \r\n        await axios.post(url, companyBody, {withCredentials: true})\r\n            .then((res) => {\r\n                if(res.status === 201)\r\n                {\r\n                    history.push(\"/InvoiceAPI_Client/Profile/\");\r\n                }\r\n            })\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <CompanyMaker handleSave={createNewCompany} cmd=\"Create\" />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CreateCompany;","export default __webpack_public_path__ + \"static/media/spill.5cb7a093.png\";","import React from 'react';\r\nimport img from \"../StaticImages/spill.png\"\r\n\r\n\r\nfunction NotFoundPage()\r\n{\r\n    return(\r\n        <div className=\"col-lg-8 bg-dark\" style={{\"margin\": \"5% auto\", \"padding\": \"30px\", \"borderRadius\": \"10px\", \"boxShadow\": \"10px 10px 5px black\"}}>\r\n            <div className=\"\">\r\n                <div className=\"col-12\">\r\n                    <h1 className=\"text-light\">404 Not Found</h1>\r\n                </div>\r\n\r\n                <div className=\"col-8 center-block\">\r\n                    <img alt=\"img-not-found\" src={img} style={{\"width\": \"100%\"}} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NotFoundPage;","import React, {useState, useEffect} from 'react';\r\nimport { useParams } from 'react-router';\r\nimport { useHistory } from 'react-router-dom'\r\nimport axios from 'axios';\r\nimport CompanyMaker from '../../Components/CompanyMaker';\r\nimport NotFoundPage from '../NotFoundPage';\r\n\r\nfunction ViewCompany()\r\n{    \r\n    const params = useParams();\r\n    const history = useHistory();\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n    const [status, setStatus] = useState();\r\n\r\n    const [targetCompany, setTargetCompany] = useState({});\r\n\r\n    useEffect(() => \r\n    {\r\n        async function getCompany()\r\n        {\r\n            const url = \"https://localhost:44383/api/Company/GetCompany/\" + params.id;\r\n            \r\n            await axios.get(url, {withCredentials: true})\r\n                .then((res) => {\r\n                    setTargetCompany(res.data);\r\n                    setStatus(res.status);\r\n                })\r\n                .catch((err) => {\r\n                    setStatus(err.response.status);\r\n                })\r\n                .finally(() => {\r\n                    setIsLoaded(true);\r\n                })\r\n        }\r\n        \r\n        getCompany();\r\n    },[params.id]);\r\n\r\n    async function saveCompany(e, companyBody)\r\n    {\r\n        e.preventDefault();\r\n        const url = \"https://localhost:44383/api/Company/UpdateCompany/\" + params.id;\r\n        \r\n        await axios.put(url, companyBody, {withCredentials: true})\r\n            .then((res) => {\r\n                if(res.status === 200)\r\n                {\r\n                    history.push(\"/InvoiceAPI_Client/Profile/\");\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                setStatus(err.response.status);\r\n            })\r\n    }\r\n\r\n    async function deleteCompany(e)\r\n    {\r\n        e.preventDefault();\r\n        const url = \"https://localhost:44383/api/Company/DeleteCompany/\" + params.id;\r\n        \r\n        await axios.delete(url, {withCredentials: true})\r\n        .then((res) => {\r\n            if(res.status === 200)\r\n            {\r\n                history.push(\"/InvoiceAPI_Client/Profile/\");\r\n            }\r\n        })\r\n        .catch((err) => {\r\n            setStatus(err.response.status);\r\n        })\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            {isLoaded ?\r\n                <div>\r\n                    {status === 200 \r\n                        ? <CompanyMaker handleSave={saveCompany} handleDelete={deleteCompany} cmd=\"Edit\" defaultCompanyVals={targetCompany} />\r\n                        : <NotFoundPage />\r\n                    }\r\n                </div>\r\n            : <div>Loading...</div>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ViewCompany;","import React, {useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport {Form, Button} from 'react-bootstrap';\r\nimport 'tinymce/tinymce';\r\nimport 'tinymce/icons/default';\r\nimport 'tinymce/themes/silver';\r\nimport 'tinymce/plugins/paste';\r\nimport 'tinymce/plugins/link';\r\nimport 'tinymce/plugins/image';\r\nimport 'tinymce/plugins/table';\r\nimport 'tinymce/skins/ui/oxide/skin.min.css';\r\nimport 'tinymce/skins/ui/oxide/content.min.css';\r\nimport 'tinymce/skins/content/default/content.min.css';\r\nimport { Editor } from '@tinymce/tinymce-react';\r\nimport \"./Styles/CompanyForms.css\";\r\n\r\nfunction InvoiceMaker(props)\r\n{\r\n    const [allCompanies, setAllCompanies] = useState([]);\r\n    \r\n    const [companyName, setCompanyName] = useState(\"\");\r\n    const [companyEmail, setCompanyEmail] = useState(\"\");\r\n    const [companyPhone, setCompanyPhone] = useState(\"\");\r\n    const [companyAddressLine1, setCompanyAdd1] = useState(\"\");\r\n    const [companyAddressLine2, setCompanyAdd2] = useState(\"\");\r\n    const [companyCity, setCompanyCity] = useState(\"\");\r\n    const [companyState, setCompanyState] = useState(\"\");\r\n    const [companyZip, setCompanyZip] = useState(\"\");\r\n    \r\n    const [customerName, setCustomerName] = useState(\"\");\r\n    const [customerAddressLine1, setCustomerAdd1] = useState(\"\");\r\n    const [customerAddressLine2, setCustomerAdd2] = useState(\"\");\r\n    const [customerCity, setCustomerCity] = useState(\"\");\r\n    const [customerState, setCustomerState] = useState(\"\");\r\n    const [customerZip, setCustomerZip] = useState(\"\");\r\n    \r\n    const [productsList, setProductsList] = useState([]);\r\n    const [taxRate, setTaxRate] = useState(0);\r\n    const [taxAmount, setTaxAmount] = useState(0);\r\n    const [subtotal, setSubtotal] = useState(0);\r\n    const [grandTotal, setGrandTotal] = useState(0);\r\n    const [notes, setNotes] = useState(\"\");\r\n    const [logo, setLogo] = useState(\"\");\r\n\r\n    const [isFinalized, setIsFinalized] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if(props.defaultInvoiceVals !== undefined)\r\n        {\r\n            setCompanyName(props.defaultInvoiceVals.companyName);\r\n            setCompanyAdd1(props.defaultInvoiceVals.addressLine1);\r\n            setCompanyAdd2(props.defaultInvoiceVals.addressLine2);\r\n            setCompanyCity(props.defaultInvoiceVals.city);\r\n            setCompanyState(props.defaultInvoiceVals.state);\r\n            setCompanyZip(props.defaultInvoiceVals.zipCode);\r\n            setCompanyEmail(props.defaultInvoiceVals.emailAddress);\r\n            setCompanyPhone(props.defaultInvoiceVals.phoneNumber);\r\n            \r\n            setCustomerName(props.defaultInvoiceVals.customerName);\r\n            setCustomerAdd1(props.defaultInvoiceVals.customerAddLine1);\r\n            setCustomerAdd2(props.defaultInvoiceVals.customerAddLine2);\r\n            setCustomerCity(props.defaultInvoiceVals.customerCity);\r\n            setCustomerState(props.defaultInvoiceVals.customerState);\r\n            setCustomerZip(props.defaultInvoiceVals.customerZipCode);\r\n            \r\n            setProductsList(props.defaultInvoiceVals.productOrServices);\r\n            setTaxRate(props.defaultInvoiceVals.taxRate);\r\n            setNotes(props.defaultInvoiceVals.notes);\r\n            setLogo(props.defaultInvoiceVals.companyLogo);\r\n        }\r\n\r\n    }, [props.defaultInvoiceVals])\r\n\r\n    useEffect(() => {\r\n        async function getCompanies()\r\n        {\r\n            const url = \"https://localhost:44383/api/Company/GetCompanies\";      \r\n            const res = await axios.get(url, {withCredentials: true});\r\n\r\n            setAllCompanies(res.data);\r\n        }\r\n        \r\n        getCompanies();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const isLogoAvailable = logo !== \"\" && logo !== null;\r\n\r\n        document.getElementById(\"logo-img\").src = logo;\r\n        document.getElementById(\"logo-img\").className = isLogoAvailable ? \"\" : \"d-none\";\r\n        document.getElementById(\"clear-logo-cont\").className = isLogoAvailable ? \"\" : \"d-none\";\r\n        \r\n    }, [logo])\r\n\r\n    useEffect(() => {\r\n        function calcultateGrandTotal()\r\n        {\r\n            // Subtotal\r\n            let newSubTotal = 0;\r\n            productsList.forEach(p => {\r\n                newSubTotal += (p.unitPrice * p.quantity); \r\n            });\r\n            setSubtotal(newSubTotal);\r\n\r\n            // Taxes\r\n            let newTaxAmount = subtotal * (taxRate / 100);\r\n            setTaxAmount(newTaxAmount);\r\n\r\n            // Grand Total\r\n            let newGrandTotal = Math.ceil((subtotal + taxAmount) * 100) / 100;\r\n            setGrandTotal(newGrandTotal);\r\n        }\r\n\r\n        calcultateGrandTotal()\r\n\r\n    }, [taxRate, productsList, subtotal, taxAmount])\r\n\r\n    function handleSelect(e)\r\n    {\r\n        const id = e.target.value;\r\n        const choice = allCompanies.find(c => c.id === id);\r\n\r\n        if(choice !== undefined)\r\n        {\r\n            setCompanyName(choice.companyName);\r\n            setCompanyAdd1(choice.addressLine1);\r\n            setCompanyAdd2(choice.addressLine2);\r\n            setCompanyCity(choice.city);\r\n            setCompanyState(choice.state);\r\n            setCompanyZip(choice.zipCode);\r\n            setCompanyEmail(choice.emailAddress);\r\n            setCompanyPhone(choice.phoneNumber);\r\n            setLogo(choice.companyLogo);\r\n        }\r\n    }\r\n\r\n    function addToProductsList(e)\r\n    {\r\n        e.preventDefault();\r\n        \r\n        const productName = document.getElementById(\"inputProductName\").value;\r\n        const productDesc = document.getElementById(\"inputProductDesc\").value;\r\n        const productPrice = document.getElementById(\"inputProductUnitPrice\").value;\r\n        const productQty = document.getElementById(\"inputProductQuantity\").value;\r\n\r\n        const newEntry = {\r\n            \"productName\": productName,\r\n            \"description\": productDesc,\r\n            \"unitPrice\": productPrice,\r\n            \"quantity\": productQty\r\n        }\r\n\r\n        document.getElementById(\"inputProductName\").value = \"\";\r\n        document.getElementById(\"inputProductDesc\").value = \"\";\r\n        document.getElementById(\"inputProductUnitPrice\").value = \"\";\r\n        document.getElementById(\"inputProductQuantity\").value = \"1\";\r\n\r\n        productsList.push(newEntry);\r\n        setProductsList([...productsList]);\r\n    }\r\n    \r\n    function removeFromProductList(e, pos)\r\n    {\r\n        e.preventDefault();\r\n        \r\n        productsList.splice(pos, 1);\r\n        setProductsList([...productsList]);\r\n    }\r\n\r\n    function handleSave(e)\r\n    {\r\n        e.preventDefault();\r\n\r\n        const body = {\r\n            \"companyName\": companyName,\r\n            \"addressLine1\": companyAddressLine1,\r\n            \"addressLine2\": companyAddressLine2,\r\n            \"city\": companyCity,\r\n            \"state\": companyState,\r\n            \"zipCode\": companyZip,\r\n            \"emailAddress\": companyEmail,\r\n            \"phoneNumber\": companyPhone,\r\n            \"customerName\": customerName,\r\n            \"customerAddLine1\": customerAddressLine1,\r\n            \"customerAddLine2\": customerAddressLine2,\r\n            \"customerCity\": customerCity,\r\n            \"customerState\": customerState,\r\n            \"customerZipCode\": customerZip,\r\n            \"isFinalized\": isFinalized,\r\n            \"taxRate\": taxRate,\r\n            \"products\": productsList,\r\n            \"notes\": notes,\r\n            \"companyLogo\": logo\r\n        }\r\n\r\n        props.handleSave(e, body);\r\n    }\r\n    \r\n    const btn_class = props.handleDelete !== undefined\r\n        ? \"col-4\"\r\n        : \"col-6\"\r\n\r\n    function handleImgUpload(e)\r\n    {\r\n        const newLogoImg = e.target.files[0];\r\n\r\n        if(newLogoImg !== undefined)\r\n        {\r\n            const reader = new FileReader();\r\n            reader.readAsDataURL(newLogoImg);\r\n            \r\n            reader.onload = function () {\r\n                const imgBytes = JSON.stringify(reader.result)\r\n                setLogo(imgBytes.substring(1, imgBytes.length-1));\r\n            }\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div className=\"col-xl-4 col-md-8 col-sm-12 creation-page\">\r\n            <div className=\"col-lg-12 logo-cont\">\r\n                <img src={logo} alt=\"logo\" id=\"logo-img\" className=\"col-12\" />\r\n            </div>\r\n            <div id=\"clear-logo-cont\">\r\n                <Button type=\"button\" className=\"btn btn-danger\" onClick={(e) => setLogo(\"\")}>Clear Logo</Button>\r\n            </div>\r\n            <h1 className=\"form-name\">{props.cmd} Invoice</h1>\r\n            <Form id='invoice-form' onSubmit={(e) => handleSave(e)}>\r\n                <div>\r\n                    <hr />\r\n                    <h3 className=\"form-name\">Company Details</h3>\r\n                    <div className=\"form-group row\">\r\n                        <div className=\"col-12\">\r\n                            <label>Logo</label>\r\n                            <input alt=\"logo-input\" className=\"btn btn-default\" type=\"file\" accept=\"image/png\" onChange={(e) => handleImgUpload(e)} />\r\n                        </div>\r\n                    </div>\r\n\r\n                    {\r\n                        allCompanies.length > 0 \r\n                        ?   <div className=\"col-12 select-block\">\r\n                                <select onChange={(e) => handleSelect(e)} className=\"form-select col-sm-4 col-xs-12 btn btn-dark\" aria-label=\"Default select example\">\r\n                                    <option hidden defaultValue>Select Company</option>\r\n                                    {allCompanies.map((c, i) => \r\n                                        <option key={i} value={c.id}>{c.companyName}</option>\r\n                                        )}\r\n                                </select>\r\n                            </div>\r\n                        : <div></div>\r\n                    }\r\n                    \r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"inputName\">Company Name</label>\r\n                        <input value={companyName || \"\"} required onChange={(e) => setCompanyName(e.target.value)} type=\"text\" className=\"form-control\" id=\"inputName\" />\r\n                    </div>\r\n                    <div className=\"form-row\">\r\n                        <div className=\"form-group col-md-6\">\r\n                            <label htmlFor=\"inputEmail4\">Email</label>\r\n                            <input value={companyEmail || \"\"} onChange={(e) => setCompanyEmail(e.target.value)} type=\"email\" className=\"form-control\" id=\"inputEmail4\" />\r\n                        </div>\r\n                        <div className=\"form-group col-md-6\">\r\n                            <label htmlFor=\"inputPhone4\">Telephone</label>\r\n                            <input value={companyPhone || \"\"} onChange={(e) => setCompanyPhone(e.target.value)} type=\"tel\" className=\"form-control\" id=\"inputPhone4\" />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"inputAddress\">Address Line 1</label>\r\n                        <input value={companyAddressLine1 || \"\"} onChange={(e) => setCompanyAdd1(e.target.value)} type=\"text\" className=\"form-control\" id=\"inputAddress\" placeholder=\"1234 Main St\" />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"inputAddress2\">Address Line 2</label>\r\n                        <input value={companyAddressLine2 || \"\"} onChange={(e) => setCompanyAdd2(e.target.value)} type=\"text\" className=\"form-control\" id=\"inputAddress2\" placeholder=\"Apartment, studio, or floor\" />\r\n                    </div>\r\n                    <div className=\"form-row\">\r\n                        <div className=\"form-group col-md-12\">\r\n                            <label htmlFor=\"inputCity\">City</label>\r\n                            <input value={companyCity || \"\"} onChange={(e) => setCompanyCity(e.target.value)} type=\"text\" className=\"form-control\" id=\"inputCity\" />\r\n                        </div>\r\n                        <div className=\"form-group col-md-8\">\r\n                            <label htmlFor=\"inputState\">State</label>\r\n                            <input value={companyState || \"\"} onChange={(e) => setCompanyState(e.target.value)} type=\"text\" className=\"form-control\" id=\"inputState\" />\r\n                        </div>\r\n                        <div className=\"form-group col-md-4\">\r\n                            <label htmlFor=\"inputZip\">Zip</label>\r\n                            <input value={companyZip || \"\"} onChange={(e) => setCompanyZip(e.target.value)} type=\"text\" className=\"form-control\" id=\"inputZip\" />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <hr />\r\n                    <h3 className=\"form-name\">Customer Details</h3>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"inputCustomerName\">Customer Name</label>\r\n                        <input value={customerName || \"\"} required onChange={(e) => setCustomerName(e.target.value)} type=\"text\" className=\"form-control\" id=\"inputCustomerName\" />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"inputCustomerAddress1\">Customer Address Line 1</label>\r\n                        <input value={customerAddressLine1 || \"\"} onChange={(e) => setCustomerAdd1(e.target.value)} type=\"text\" className=\"form-control\" id=\"inputCustomerAddress1\" />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"inputCustomerAddress2\">Customer Address Line 2</label>\r\n                        <input value={customerAddressLine2 || \"\"} onChange={(e) => setCustomerAdd2(e.target.value)} type=\"tel\" className=\"form-control\" id=\"inputCustomerAddress2\" />\r\n                    </div>\r\n                    <div className=\"form-row\">\r\n                        <div className=\"form-group col-md-12\">\r\n                            <label htmlFor=\"inputCustomerCity\">Customer City</label>\r\n                            <input value={customerCity || \"\"} onChange={(e) => setCustomerCity(e.target.value)} type=\"text\" className=\"form-control\" id=\"inputCustomerCity\" />\r\n                        </div>\r\n                        <div className=\"form-group col-md-8\">\r\n                            <label htmlFor=\"inputCustomerState\">Customer State</label>\r\n                            <input value={customerState || \"\"} onChange={(e) => setCustomerState(e.target.value)} type=\"text\" className=\"form-control\" id=\"inputCustomerState\" />\r\n                        </div>\r\n                        <div className=\"form-group col-md-4\">\r\n                            <label htmlFor=\"inputCustomerZip\">Zip</label>\r\n                            <input value={customerZip || \"\"} onChange={(e) => setCustomerZip(e.target.value)} type=\"text\" className=\"form-control\" id=\"inputCustomerZip\" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Form>\r\n            <hr />\r\n            <h3 className=\"form-name\">Product Details</h3>\r\n            <Form onSubmit={(e) => addToProductsList(e)}>\r\n                <div className=\"add-product-section\">\r\n                    <div className=\"form-group\">\r\n                        <label>Product Name</label>\r\n                        <input type=\"text\" required className=\"form-control\" id=\"inputProductName\" />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Product Description</label>\r\n                        <Editor\r\n                            id=\"inputProductDesc\"\r\n                            init={{\r\n                                skin: true,\r\n                                content_css: true,\r\n                                menubar: true,\r\n                                height: 200,\r\n                                plugins: [\r\n                                    'advlist autolink lists link charmap print preview anchor',\r\n                                    'searchreplace visualblocks code fullscreen',\r\n                                    'insertdatetime media table paste code help wordcount'\r\n                                ],\r\n                                toolbar: 'undo redo | formatselect | ' +\r\n                                    'bold italic backcolor | alignleft aligncenter ' +\r\n                                    'alignright alignjustify | bullist numlist outdent indent | ' +\r\n                                    'removeformat | help',\r\n                            }}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-row\">\r\n                        <div className=\"form-group col-md-8\">\r\n                            <label>Unit Price</label>\r\n                            <input required type=\"number\" className=\"form-control\" id=\"inputProductUnitPrice\" />\r\n                        </div>\r\n                        <div className=\"form-group col-md-4\">\r\n                            <label>Quantity</label>\r\n                            <input required type=\"number\" defaultValue={1} className=\"form-control\" min=\"1\" id=\"inputProductQuantity\" />\r\n                        </div>\r\n                    </div>\r\n                    <Button type=\"submit\">Add New</Button>\r\n                    <hr />\r\n                    <h3 className=\"form-name\">Invoice Details</h3>\r\n                    <table className=\"table table-dark table-striped table-responsive-sm\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th scope=\"col\">Product Name</th>\r\n                                <th scope=\"col\">Description</th>\r\n                                <th scope=\"col\">Unit Price</th>\r\n                                <th scope=\"col\">Quantity</th>\r\n                                <th scope=\"col\">Actions</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {productsList.map((p, i) => \r\n                                <tr key={i}>\r\n                                    <td className=\"align-middle\">{p.productName}</td>\r\n                                    <td className=\"align-middle\">\r\n                                        <div dangerouslySetInnerHTML={{__html: p.description}}>\r\n                                        </div>\r\n                                    </td>\r\n                                    <td className=\"align-middle\">{p.unitPrice}</td>\r\n                                    <td className=\"align-middle\">{p.quantity}</td>\r\n                                    <td className=\"align-middle\"><button className=\"btn btn-danger\" onClick={(e) => removeFromProductList(e, i)} type=\"button\">Delete</button></td>\r\n                                </tr>\r\n                            )}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </Form>\r\n            <div>\r\n                <hr/>\r\n                <h3 className=\"form-name\">Totals</h3>\r\n                <table className=\"table table-dark text-left col-lg-12\">\r\n                    <tbody>\r\n                        <tr>\r\n                            <td className=\"left\">\r\n                                <strong>Subtotal</strong>\r\n                            </td>\r\n                            <td className=\"right\">${subtotal.toFixed(2)}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td className=\"left\">\r\n                                <strong>Tax Rate <input className=\"tax-rate-input\" onChange={(e) => setTaxRate(e.target.value)} value={taxRate || 0} type=\"number\" min=\"0\" id=\"inputTaxRate\" /> %</strong>\r\n                            </td>\r\n                            <td className=\"right\">${taxAmount.toFixed(2)}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td className=\"left\">\r\n                                <strong>Grand Total</strong>\r\n                            </td>\r\n                            <td className=\"right\">\r\n                                <strong>${grandTotal.toFixed(2)}</strong>\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"inputNotes\">Notes</label>\r\n                <Editor\r\n                    skin=\"oxide-dark\"\r\n                    onEditorChange={(content) => setNotes(content)}\r\n                    id=\"inputNotes\"\r\n                    value={notes}\r\n                    init={{\r\n                        skin: true,\r\n                        content_css: true,\r\n                        menubar: true,\r\n                        height: 200,\r\n                        plugins: [\r\n                            'advlist autolink lists link charmap print preview anchor',\r\n                            'searchreplace visualblocks code fullscreen',\r\n                            'insertdatetime media table paste code help wordcount'\r\n                        ],\r\n                        toolbar: 'undo redo | formatselect | ' +\r\n                            'bold italic backcolor | alignleft aligncenter ' +\r\n                            'alignright alignjustify | bullist numlist outdent indent | ' +\r\n                            'removeformat | help',\r\n                    }}\r\n                />\r\n            </div>\r\n            <div className=\"col-12\">\r\n                <div className=\"row\">\r\n                    <div className={btn_class}>\r\n                        <Button form=\"invoice-form\" type=\"submit\" onClick={(e) => setIsFinalized(false)} className=\"btn btn-primary col-12\">Save</Button>\r\n                    </div>\r\n                    <div className={btn_class}>\r\n                        <Button form=\"invoice-form\" type=\"submit\" onClick={(e) => setIsFinalized(true)} className=\"btn btn-success col-12\">Generate</Button>\r\n                    </div>\r\n                    {\r\n                        props.handleDelete !== undefined\r\n                            ?   <div className={btn_class}>\r\n                                    <Button type=\"button\" onClick={(e) => props.handleDelete(e)} className=\"btn btn-danger col-12\">Delete</Button>\r\n                                </div>\r\n                            :   <div></div>\r\n                    } \r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default InvoiceMaker;","import React from 'react';\r\nimport axios from 'axios';\r\nimport InvoiceMaker from '../../Components/InvoiceMaker';\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nfunction CreateInvoice()\r\n{\r\n    const history = useHistory();\r\n\r\n    async function createNewInvoice(e, invoiceBody)\r\n    {\r\n        e.preventDefault();\r\n\r\n        const url = \"https://localhost:44383/api/Invoice/NewInvoice\";\r\n\r\n        await axios.post(url, invoiceBody, {withCredentials: true})\r\n            .then((res) => {\r\n                if(res.status === 201)\r\n                {\r\n                    if(res.data.isFinalized)\r\n                    {\r\n                        history.push(\"/InvoiceAPI_Client/InvoiceManager/ViewInvoice/\" + res.data.id);\r\n                    }\r\n                    else\r\n                    {\r\n                        history.push(\"/InvoiceAPI_Client/Profile/\")\r\n                    }\r\n                }\r\n            })\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <InvoiceMaker cmd=\"Create\" handleSave={createNewInvoice} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CreateInvoice;","import React from 'react';\r\nimport './Styles/InvoiceDoc.css';\r\n\r\nconst Invoice = React.forwardRef((props, ref) =>\r\n{\r\n    return(\r\n        <div className=\"container-fluid col-lg-8 col-md-12\" ref={ref}>\r\n            <div id=\"ui-view\" data-select2-id=\"ui-view\">\r\n                <div>\r\n                    <div className=\"card\">\r\n                        <div className=\"card-header text-center\">Invoice:\r\n                            <strong> #{props.data.id}</strong>\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n\r\n                            { props.data.companyLogo !== \"\" && props.data.companyLogo !== null\r\n                                ? <div className=\"col-lg-12\" id=\"logo-cont\">\r\n                                     <img id=\"logo-img\" src={props.data.companyLogo} alt=\"logo\"/>\r\n                                 </div>\r\n\r\n                                :<div></div>\r\n                            }\r\n\r\n                            <div className=\"col-lg-12 mb-4\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"invoice-header-block lightgrey-border\">\r\n                                       <table className=\"table\">\r\n                                            <thead>\r\n                                                <tr>\r\n                                                    <th>From</th>\r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n                                                <tr className=\"text-left\">\r\n                                                    <td>\r\n                                                        <div>\r\n                                                            <strong>{props.data.companyName}</strong>\r\n                                                        </div>\r\n                                                        <div>{props.data.addressLine1}</div>\r\n                                                        <div>{props.data.addressLine2}</div>\r\n                                                        <div>\r\n                                                            {props.data.city !== \"\" ? props.data.city + \", \" : \"\"}\r\n                                                            {props.data.state !== \"\" ? props.data.state + \", \" : \"\"}\r\n                                                            {props.data.zipCode}\r\n                                                        </div>\r\n                                                        <div>{props.data.emailAddress}</div>\r\n                                                        <div>{props.data.phoneNumber}</div>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            </tbody>\r\n                                        </table> \r\n                                    </div>\r\n                                    \r\n                                    <div className=\"invoice-header-block lightgrey-border\">\r\n                                        <table className=\"table \">\r\n                                            <thead>\r\n                                                <tr>\r\n                                                    <th>To</th>\r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n                                                <tr className=\"text-left\">\r\n                                                    <td>\r\n                                                        <div>\r\n                                                            <strong>{props.data.customerName}</strong>\r\n                                                        </div>\r\n                                                        <div>{props.data.customerAddLine1}</div>\r\n                                                        <div>{props.data.customerAddLine2}</div>\r\n                                                        <div>\r\n                                                            {props.data.customerCity !== \"\" ? props.data.customerCity + \", \" : \"\"}\r\n                                                            {props.data.customerState !== \"\" ? props.data.customerState + \", \" : \"\"}\r\n                                                            {props.data.customerZipCode}\r\n                                                        </div>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            </tbody>\r\n                                        </table>\r\n                                    </div>\r\n\r\n                                    <div className=\"invoice-header-block lightgrey-border\">\r\n                                        <table className=\"table \">\r\n                                            <thead>\r\n                                                <tr>\r\n                                                    <th>Details</th>\r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n                                                <tr className=\"text-left\">\r\n                                                    <td>\r\n                                                        <div>Invoice:\r\n                                                            <strong> #{props.data.id}</strong>\r\n                                                        </div>\r\n                                                        <div>Date Created: {props.data.date}</div>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            </tbody>\r\n                                        </table>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            \r\n                                                          \r\n                            <div className=\"table-responsive\">\r\n                                <table className=\"table table-striped text-left\">\r\n                                    <thead>\r\n                                        <tr className=\"center-text\">\r\n                                            <th className=\"center\">#</th>\r\n                                            <th>Item</th>\r\n                                            <th>Description</th>\r\n                                            <th className=\"center\">Quantity</th>\r\n                                            <th className=\"right\">Unit Cost</th>\r\n                                            <th className=\"right\">Total</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {props.data.productOrServices.map((p, i) => \r\n                                            <tr key={i}>\r\n                                                <td className=\"center\">{i+1}</td>\r\n                                                <td className=\"left\">{p.productName}</td>\r\n                                                <td className=\"left\">\r\n                                                    <div dangerouslySetInnerHTML={{__html: p.description}}>\r\n                                                    </div>\r\n                                                </td>\r\n                                                <td className=\"center\">{p.quantity}</td>\r\n                                                <td className=\"right\">${p.unitPrice.toFixed(2)}</td>\r\n                                                <td className=\"right\">${(p.unitPrice * p.quantity).toFixed(2)}</td>\r\n                                            </tr>\r\n                                        )}\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                            \r\n                            <div className=\"col-lg-12\">\r\n                                <div className=\"row\">\r\n\r\n                                    <div className=\"invoice-footer-notes mb-4\">\r\n                                        <table className=\"table\">\r\n                                            <thead>\r\n                                                <tr>\r\n                                                    <th className=\"lightgrey-border text-center\">Notes</th>\r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n                                                <tr className=\"text-left\">\r\n                                                    <td>\r\n                                                        <div dangerouslySetInnerHTML={{__html: props.data.notes}}>\r\n                                                        </div>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            </tbody>\r\n                                        </table>\r\n                                    </div>\r\n\r\n                                    <div className=\"invoice-footer-calculations mb-4\">\r\n                                        <table className=\"table table-fixed\">\r\n                                            <thead>\r\n                                                <tr>\r\n                                                    <th className=\"lightgrey-border text-center\">Calculations</th>\r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n                                                <tr className=\"lightgrey-border\">\r\n                                                    <td className=\"lightgrey-border\">\r\n                                                        <div className=\"\"> \r\n                                                            <table className=\"table table-clear text-left\">\r\n                                                                <tbody>\r\n                                                                    <tr>\r\n                                                                        <td className=\"left\">\r\n                                                                            <strong>Subtotal</strong>\r\n                                                                        </td>\r\n                                                                        <td className=\"right\">${props.data.subtotal}</td>\r\n                                                                    </tr>\r\n                                                                    <tr>\r\n                                                                        <td className=\"left\">\r\n                                                                            <strong>Tax Rate ({props.data.taxRate}%)</strong>\r\n                                                                        </td>\r\n                                                                        <td className=\"right\">${props.data.taxes || 0}</td>\r\n                                                                    </tr>\r\n                                                                    <tr>\r\n                                                                        <td className=\"left\">\r\n                                                                            <strong>Grand Total</strong>\r\n                                                                        </td>\r\n                                                                        <td className=\"right\">\r\n                                                                            <strong>${props.data.total}</strong>\r\n                                                                        </td>\r\n                                                                    </tr>\r\n                                                                </tbody>\r\n                                                            </table>\r\n                                                        </div>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            </tbody>\r\n                                        </table>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default Invoice;","import React, {useRef, useState, useEffect} from \"react\";\r\nimport { useHistory, useParams } from \"react-router\";\r\nimport { useReactToPrint } from 'react-to-print';\r\nimport Invoice from \"../../Components/Invoice\";\r\nimport axios from 'axios';\r\nimport \"../../Components/Styles/CompanyForms.css\";\r\nimport InvoiceMaker from \"../../Components/InvoiceMaker\";\r\nimport NotFoundPage from \"../NotFoundPage\";\r\n\r\n//https://www.youtube.com/watch?v=497riGWbhsQ\r\n\r\nfunction ViewInvoice()\r\n{\r\n    const history = useHistory();\r\n    const params = useParams();\r\n    const componentRef = useRef();\r\n    const handlePrint = useReactToPrint({\r\n        content: () => componentRef.current,\r\n    });\r\n    \r\n    const [invoiceData, setInvoiceData] = useState({});    \r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n    const [loadStatus, setLoadStatus] = useState();\r\n\r\n    useEffect(() => {\r\n        async function getInvoiceData()\r\n        {\r\n            const url = \"https://localhost:44383/api/Invoice/GetInvoice/\" + params.id;            \r\n\r\n            await axios.get(url, {withCredentials: true})\r\n                .then((res) => {\r\n                    setInvoiceData(res.data);\r\n                    setLoadStatus(res.status);\r\n                })\r\n                .catch((err) => {\r\n                    setLoadStatus(err.response.status);\r\n                })\r\n                .finally(() => {\r\n                    setIsLoaded(true);\r\n                })\r\n        }\r\n        \r\n        getInvoiceData();\r\n    },[params.id]);\r\n\r\n    async function saveInvoice(e, invoiceBody)\r\n    {\r\n        e.preventDefault();\r\n\r\n        const url = \"https://localhost:44383/api/Invoice/UpdateInvoice/\" + params.id;\r\n\r\n        await axios.put(url, invoiceBody, {withCredentials: true})\r\n            .then((res) => {\r\n                if(res.status === 200)\r\n                {\r\n                    if(!res.data.isFinalized)\r\n                    {\r\n                        history.push(\"/InvoiceAPI_Client/Profile\")\r\n                        return;\r\n                    }\r\n\r\n                    setInvoiceData(res.data);\r\n                    setLoadStatus(res.status)\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                setLoadStatus(err.response.status)\r\n            })\r\n    }\r\n\r\n    async function deleteInvoice(e)\r\n    {\r\n        e.preventDefault();\r\n        const url = \"https://localhost:44383/api/Invoice/DeleteInvoice/\" + params.id;\r\n\r\n        await axios.delete(url, {withCredentials: true})\r\n            .then((res) => {\r\n                if(res.status === 200)\r\n                {\r\n                    history.push(\"/InvoiceAPI_Client/Profile\")\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                setLoadStatus(err.response.status);\r\n            })\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            {isLoaded ? \r\n                <div >\r\n                    {loadStatus === 200 ?\r\n                        <div>\r\n                            {invoiceData.isFinalized ?\r\n                                <div className=\"col-lg-12 view-invoice\">\r\n                                    <button\r\n                                        type=\"button\"\r\n                                        className=\"p-2 mb-4 btn btn-success\"\r\n                                        onClick={handlePrint}>\r\n                                        {\" \"}\r\n                                        Print Invoice{\" \"}\r\n                                    </button>\r\n                                    <Invoice data={invoiceData} ref={componentRef} />\r\n                                </div>\r\n\r\n                                : <InvoiceMaker defaultInvoiceVals={invoiceData} cmd=\"Edit\" handleSave={saveInvoice} handleDelete={deleteInvoice}/>\r\n                            }\r\n                        </div>\r\n                    \r\n                    : <NotFoundPage />\r\n                    }\r\n                </div>\r\n\r\n                : <div>Loading...</div>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ViewInvoice;","import React from 'react';\r\nimport { Redirect, Route } from 'react-router-dom'\r\nimport { useSelector } from 'react-redux';\r\n\r\nfunction PrivateRoute(props)\r\n{\r\n    const {isLoggedIn} = useSelector(state => state.AuthSlice);\r\n\r\n    return(\r\n        <Route exact path={props.path} render={() => isLoggedIn ? (props.Comp) : (<Redirect to=\"/InvoiceAPI_Client/Login\" />)} />\r\n    )\r\n}\r\n\r\nexport default PrivateRoute;","import React from 'react';\r\n\r\nfunction HomePage()\r\n{\r\n    return(\r\n        <div className=\"col-12\">\r\n            <div className=\"col-sm-6 bg-light\" style={{\"margin\": \"5% auto\", \"padding\": \"5%\", \"borderRadius\": \"10px\",}}>\r\n                <h1>Build Invoices For Free!</h1>\r\n                <img style={{\"margin\": \"30px 0\", \"width\": \"50%\", \"height\": \"auto\"}} alt=\"icon\" src={\"https://banner.uclipart.com/20200112/eos/coffee-cup-coffee-cup.png\"}/>\r\n                <div className=\"row\">\r\n                    <div className=\"col-6\">\r\n                        <a className=\"btn btn-primary col-12\" href=\"/InvoiceAPI_Client/Register\">Register</a>\r\n                    </div>\r\n                    <div className=\"col-6\">\r\n                        <a className=\"btn btn-dark col-12\" href=\"/InvoiceAPI_Client/Login\">Login</a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomePage;","import React, { useEffect, useState } from \"react\";\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nimport axios from 'axios';\nimport './App.css';\nimport NavBar from './Components/NavBar.js';\nimport LoginPage from './Pages/LoginPage.js';\nimport RegisterPage from './Pages/RegisterPage.js';\nimport ProfilePage from \"./Pages/ProfilePage.js\"\nimport CreateCompany from \"./Pages/CompanyManager/CreateCompany.js\";\nimport ViewCompany from \"./Pages/CompanyManager/ViewCompany.js\";\nimport CreateInvoice from \"./Pages/InvoiceManager/CreateInvoice\";\nimport ViewInvoice from \"./Pages/InvoiceManager/ViewInvoice\";\nimport { useDispatch } from 'react-redux';\nimport { userAuthentication } from './App/AuthSlicer';\nimport PrivateRoute from \"./Components/PrivateRoute\";\nimport HomePage from \"./Pages/HomePage\";\nimport NotFoundPage from \"./Pages/NotFoundPage\";\n\nfunction App() \n{\n  const dispatch = useDispatch();\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n      async function getUserStatus()\n      {\n          const url = \"https://localhost:44383/api/Account/IsUserLoggedIn\";\n          await axios.get(url, {withCredentials: true})\n            .then((res) => {\n              if(res.data.email !== \"\")\n                dispatch(userAuthentication(res.data))\n            })\n            .finally(() => {\n              setIsLoading(false)\n            })\n      }\n\n      getUserStatus();\n  }, [dispatch])\n\n  if(isLoading)\n  {\n    return <div>Loading...</div>\n  }\n  else\n  {\n    return (\n        <div className=\"App\">\n          <Router>\n            <NavBar />\n            <Switch>\n                <Route exact path=\"/InvoiceAPI_Client\">\n                  <HomePage />\n                </Route>\n\n                <Route exact path=\"/InvoiceAPI_Client/Login\">\n                  <LoginPage />\n                </Route>\n\n                <Route exact path=\"/InvoiceAPI_Client/Register\">\n                  <RegisterPage />\n                </Route>\n\n                <PrivateRoute Comp={<ProfilePage />} path=\"/InvoiceAPI_Client/Profile/\"/>\n\n                <PrivateRoute Comp={<CreateCompany />} path=\"/InvoiceAPI_Client/CompanyManager/NewCompany/\"/>\n                <PrivateRoute Comp={<ViewCompany />} path=\"/InvoiceAPI_Client/CompanyManager/ViewCompany/:id\"/>\n\n                <PrivateRoute Comp={<CreateInvoice />} path=\"/InvoiceAPI_Client/InvoiceManager/NewInvoice\"/>\n                <PrivateRoute Comp={<ViewInvoice />} path=\"/InvoiceAPI_Client/InvoiceManager/ViewInvoice/:id\"/>\n\n                <Route path='*' exact={true} component={NotFoundPage} />\n\n            </Switch>\n          </Router>\n        </div>\n    );\n  }\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from '@reduxjs/toolkit'\r\nimport AuthSlice from \"./AuthSlicer\";\r\n\r\nconst store = configureStore({\r\n    reducer:{\r\n        AuthSlice: AuthSlice\r\n    },\r\n})\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {Provider} from \"react-redux\";\nimport store from './App/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}